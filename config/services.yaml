# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: false      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.
        public: true         # Allows optimizing the container by removing unused services; this also means
                             # fetching services directly from the container via $container->get() won't work.
                             # The best practice is to be explicit about your dependencies anyway.

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    qq.app:
        class: WorldFactory\QQ\Application
        synthetic: true

    qq.loader.config:
        class: WorldFactory\QQ\Misc\ConfigLoader
        synthetic: true

    qq.factory.runners:
        class: WorldFactory\QQ\Services\RunnerFactory
        arguments: ["@service_container"]
        shared: false

    qq.formatter.script:
        class: WorldFactory\QQ\Services\ScriptFormatter
        arguments: ["@qq.loader.config"]
        shared: false

    qq.command.about:
        class: WorldFactory\QQ\Services\Commands\AboutCommand
        tags:
            - { name: console.command, command: 'about' }

    qq.command.runner_list:
        class: WorldFactory\QQ\Services\Commands\RunnerListCommand
        tags:
            - { name: console.command, command: 'runner:list' }

    qq.command.runner_help:
        class: WorldFactory\QQ\Services\Commands\RunnerHelpCommand
        tags:
            - { name: console.command, command: 'runner:help' }

    qq.handler.deprecation:
        class: WorldFactory\QQ\Services\DeprecationHandler

    qq.iterator.script:
        class: WorldFactory\QQ\Services\ScriptIterator
        arguments: ["@service_container", "@qq.factory.runners"]

    qq.factory.step:
        class: WorldFactory\QQ\Services\StepFactory
        arguments: ["@service_container"]

    qq.factory.stage:
        class: WorldFactory\QQ\Services\StageFactory
        arguments: ["@service_container"]
